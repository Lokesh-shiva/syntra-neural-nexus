/* Enhanced Micro-interactions and Natural Animations */

/* Base button interactions */
.btn {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateY(0);
  position: relative;
}

.btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.btn:active {
  transform: translateY(1px);
}

/* Ripple effect for buttons */
.btn-ripple {
  position: relative;
  overflow: hidden;
}

.btn-ripple::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.3) 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform 0.5s, opacity 0.8s;
}

.btn-ripple:active::after {
  transform: scale(0, 0);
  opacity: 0.3;
  transition: 0s;
}

/* Natural hover states */
.interactive-element {
  transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1),
              box-shadow 0.3s ease-out;
}

.interactive-element:hover {
  transform: scale(1.02);
}

/* Organic loading animations */
.loading-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(0.98);
  }
}

/* Spinner animation */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Natural state transitions */
.state-transition {
  transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1),
              transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.state-enter {
  opacity: 0;
  transform: translateY(10px);
}

.state-enter-active {
  opacity: 1;
  transform: translateY(0);
}

.state-exit {
  opacity: 1;
  transform: translateY(0);
}

.state-exit-active {
  opacity: 0;
  transform: translateY(-10px);
}

/* Subtle feedback animations */
.feedback-success {
  animation: successPop 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.feedback-error {
  animation: errorShake 0.4s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

@keyframes successPop {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

/* Smooth focus states */
.focus-ring {
  transition: box-shadow 0.2s ease-out;
}

.focus-ring:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);
}

/* Variable timing for natural feel */
:root {
  --timing-quick: 150ms;
  --timing-base: 300ms;
  --timing-slow: 450ms;
  --timing-very-slow: 600ms;
  --easing-bounce: cubic-bezier(0.34, 1.56, 0.64, 1);
  --easing-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --easing-decelerate: cubic-bezier(0, 0, 0.2, 1);
  --easing-accelerate: cubic-bezier(0.4, 0, 1, 1);
}

/* Loading skeleton animation */
.skeleton {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.1) 25%,
    rgba(255, 255, 255, 0.2) 37%,
    rgba(255, 255, 255, 0.1) 63%
  );
  background-size: 400% 100%;
  animation: skeletonLoading 1.4s ease infinite;
}

@keyframes skeletonLoading {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0 50%;
  }
}

/* Progressive loading sequence */
.loading-sequence > * {
  opacity: 0;
  transform: translateY(10px);
  animation: sequenceIn 0.5s var(--easing-smooth) forwards;
}

.loading-sequence > *:nth-child(1) { animation-delay: 0.1s; }
.loading-sequence > *:nth-child(2) { animation-delay: 0.2s; }
.loading-sequence > *:nth-child(3) { animation-delay: 0.3s; }
.loading-sequence > *:nth-child(4) { animation-delay: 0.4s; }
.loading-sequence > *:nth-child(5) { animation-delay: 0.5s; }

@keyframes sequenceIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
} 